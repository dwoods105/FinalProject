 Test code that I used to determine whether my evaluation methods were working correctly.

 dealer deal = new dealer();
            int rf=0;
            int sf=0;
            int fk=0;
            int fh=0;
            int f = 0;
            int s = 0;
            int tk=0;
            int tp = 0;
            int p = 0;
            int n=0;
            int err=0;
            for(int i = 0; i<1;i++){
                hand RoyalFlush=new hand();
                RoyalFlush.addCard(new card(Rank.Ten,Suit.Hearts));
                RoyalFlush.addCard(new card(Rank.Jack,Suit.Hearts));
                RoyalFlush.addCard(new card(Rank.Queen,Suit.Hearts));
                RoyalFlush.addCard(new card(Rank.King,Suit.Hearts));
                RoyalFlush.addCard(new card(Rank.Ace,Suit.Hearts));

                deal.evaluate(RoyalFlush);
                switch(deal.getResultID()){
                    case 0: rf++;break;
                    case 1: sf++;break;
                    case 2: fk++;break;
                    case 3: fh++;break;
                    case 4: f++;break;
                    case 5: s++;break;
                    case 6: tk++;break;
                    case 7: tp++;break;
                    case 8: p++;break;
                    case 9: n++;break;
                    default:err++; break;
                }
                deal.reset();
                deal.shuffle();
            }
            System.out.println("Game played: "+1+" times\nRoyal Flush: "+rf+"\t"+(double)100*(rf/1)+"%\n"+"Straight Flush: "+sf+"\t"+(double)100*(sf/1)+"%\n" +
                    "Four of a Kind: "+fk+"\t"+(double)100*(fk/1)+"%\n"+"Full House: "+fh+"\t"+(double)100*(fh/1)+"%\n"+"Flush: "+f+"\t"+(double)100*(f/1)+"%\n"+
                    "Straight: "+s+"\t"+(double)100*(s/1)+"%\n"+"Three of a Kind: "+tk+"\t"+(double)100*(tk/1)+"%\n"+"Two Pair: "+tp+"\t"+(double)100*(tp/1)+"%\n"+
                    "Pair: "+p+"\t"+(double)100*(p/1)+"%\n"+"Nothing: "+n+"\t"+(double)100*(n/1)+"%\n"+"Error: "+err+"\t"+(double)100*(err/1)+"%\n");


/*

hand RoyalFlush = new hand();
hand StraightFlush = new hand();
hand FourOfAKind = new hand();
hand FullHouse = new hand();
hand Flush = new hand();
hand Straight = new hand();
hand ThreeOfAKind = new hand();
hand TwoPair = new hand();
hand Pair = new hand();
hand Nothing = new hand();
RoyalFlush.addCard(new card(Rank.Ten,Suit.Hearts));
RoyalFlush.addCard(new card(Rank.Jack,Suit.Hearts));
RoyalFlush.addCard(new card(Rank.Queen,Suit.Hearts));
RoyalFlush.addCard(new card(Rank.King,Suit.Hearts));
RoyalFlush.addCard(new card(Rank.Ace,Suit.Hearts));
StraightFlush.addCard(new card(Rank.Five,Suit.Hearts));
        StraightFlush.addCard(new card(Rank.Six,Suit.Hearts));
        StraightFlush.addCard(new card(Rank.Seven,Suit.Hearts));
        StraightFlush.addCard(new card(Rank.Eight,Suit.Hearts));
        StraightFlush.addCard(new card(Rank.Nine,Suit.Hearts));
        FourOfAKind.addCard(new card(Rank.Ten,Suit.Clubs));
        FourOfAKind.addCard(new card(Rank.Ten,Suit.Hearts));
        FourOfAKind.addCard(new card(Rank.Ten,Suit.Spades));
        FourOfAKind.addCard(new card(Rank.Ten,Suit.Diamonds));
        FourOfAKind.addCard(new card(Rank.Two,Suit.Spades));
        FullHouse.addCard(new card(Rank.Ten,Suit.Clubs));
        FullHouse.addCard(new card(Rank.Ten,Suit.Spades));
        FullHouse.addCard(new card(Rank.Ten,Suit.Diamonds));
        FullHouse.addCard(new card(Rank.Two,Suit.Spades));
        FullHouse.addCard(new card(Rank.Two,Suit.Hearts));
        Flush.addCard(new card(Rank.King,Suit.Hearts));
        Flush.addCard(new card(Rank.Ten,Suit.Hearts));
        Flush.addCard(new card(Rank.Nine,Suit.Hearts));
        Flush.addCard(new card(Rank.Seven,Suit.Hearts));
        Flush.addCard(new card(Rank.Six,Suit.Hearts));
        Straight.addCard(new card(Rank.Two,Suit.Clubs));
        Straight.addCard(new card(Rank.Three,Suit.Hearts));
        Straight.addCard(new card(Rank.Four,Suit.Diamonds));
        Straight.addCard(new card(Rank.Five,Suit.Clubs));
        Straight.addCard(new card(Rank.Six,Suit.Spades));
        ThreeOfAKind.addCard(new card(Rank.Ten,Suit.Clubs));
        ThreeOfAKind.addCard(new card(Rank.Ten,Suit.Spades));
        ThreeOfAKind.addCard(new card(Rank.Ten,Suit.Diamonds));
        ThreeOfAKind.addCard(new card(Rank.Jack,Suit.Spades));
        ThreeOfAKind.addCard(new card(Rank.Five,Suit.Hearts));
        TwoPair.addCard(new card(Rank.Queen,Suit.Clubs));
        TwoPair.addCard(new card(Rank.Queen,Suit.Spades));
        TwoPair.addCard(new card(Rank.Four,Suit.Spades));
        TwoPair.addCard(new card(Rank.Four,Suit.Hearts));
        TwoPair.addCard(new card(Rank.Ace,Suit.Clubs));
        Pair.addCard(new card(Rank.King,Suit.Spades));
        Pair.addCard(new card(Rank.King,Suit.Diamonds));
        Pair.addCard(new card(Rank.Six,Suit.Hearts));
        Pair.addCard(new card(Rank.Two,Suit.Diamonds));
        Pair.addCard(new card(Rank.Three,Suit.Clubs));
        Nothing.addCard(new card(Rank.Ten,Suit.Hearts));
        Nothing.addCard(new card(Rank.Eight,Suit.Clubs));
        Nothing.addCard(new card(Rank.Six,Suit.Diamonds));
        Nothing.addCard(new card(Rank.Four,Suit.Spades));

        dealer deal = new dealer();
        System.out.println(deal.evaluate(RoyalFlush));
        System.out.println(deal.evaluate(StraightFlush));
        System.out.println(deal.evaluate(FourOfAKind));
        System.out.println(deal.evaluate(FullHouse));
        System.out.println(deal.evaluate(Flush));
        System.out.println(deal.evaluate( Straight));
        System.out.println(deal.evaluate(ThreeOfAKind));
        System.out.println(deal.evaluate(TwoPair));
        System.out.println(deal.evaluate(Pair));
        System.out.println(deal.evaluate(Nothing));


*/



    }
}
